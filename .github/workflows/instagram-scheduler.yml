name: Instagram Post Scheduler

on:
  schedule:
    # Runs every 5 minutes
    - cron: '*/10 * * * *'
  
  # Allows manual trigger from GitHub Actions tab
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug logging'
        required: false
        default: 'false'

jobs:
  run-scheduled-posts:
    runs-on: ubuntu-latest
    timeout-minutes: 25  # Prevent hanging jobs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'  # Cache pip dependencies for faster runs
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run scheduled posts
        env:
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
          # Facebook/Instagram API
          FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
          
          # AWS S3 for media storage
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          
          # Set GitHub Actions environment flag
          GITHUB_ACTIONS: "true"
          
        run: |
          python -c "
          import sys
          from datetime import datetime
          print(f'Starting scheduler run at {datetime.utcnow()} UTC')
          
          try:
              from services.scheduler import run_scheduled_posts
              results = run_scheduled_posts()
              
              if results:
                  print(f'Processed {len(results)} scheduled posts:')
                  for result in results:
                      print(f'  - {result}')
              else:
                  print('No scheduled posts to process at this time.')
                  
          except Exception as e:
              print(f'Error running scheduler: {e}')
              import traceback
              traceback.print_exc()
              sys.exit(1)
          "
      
      - name: Log completion
        if: always()
        run: |
          echo "Scheduler run completed at $(date)"
          echo "Next run will be in 5 minutes (unless manually triggered)"